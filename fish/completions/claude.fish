# Fish completion for claude

# Main commands
complete -c claude -f -n __fish_use_subcommand -a mcp -d "Configure and manage MCP servers"
complete -c claude -f -n __fish_use_subcommand -a plugin -d "Manage Claude Code plugins"
complete -c claude -f -n __fish_use_subcommand -a migrate-installer -d "Migrate from global npm to local installation"
complete -c claude -f -n __fish_use_subcommand -a setup-token -d "Set up long-lived authentication token"
complete -c claude -f -n __fish_use_subcommand -a doctor -d "Check health of Claude Code auto-updater"
complete -c claude -f -n __fish_use_subcommand -a update -d "Check for and install updates"
complete -c claude -f -n __fish_use_subcommand -a install -d "Install Claude Code native build"

# Options
complete -c claude -l debug -d "Enable debug mode with optional category filtering"
complete -c claude -l verbose -d "Override verbose mode setting from config"
complete -c claude -s p -l print -d "Print response and exit (useful for pipes)"
complete -c claude -l output-format -d "Output format (text, json, stream-json)" -xa "text json stream-json"
complete -c claude -l input-format -d "Input format (text, stream-json)" -xa "text stream-json"
complete -c claude -l include-partial-messages -d "Include partial message chunks"
complete -c claude -l dangerously-skip-permissions -d "Bypass all permission checks"
complete -c claude -l replay-user-messages -d "Re-emit user messages from stdin"
complete -c claude -l allowed-tools -d "Comma or space-separated list of tool names to allow"
complete -c claude -l disallowed-tools -d "Comma or space-separated list of tool names to deny"
complete -c claude -l mcp-config -d "Load MCP servers from JSON files or strings"
complete -c claude -l append-system-prompt -d "Append a system prompt"
complete -c claude -l permission-mode -d "Permission mode for session" -xa "acceptEdits bypassPermissions default plan"
complete -c claude -s c -l continue -d "Continue the most recent conversation"
complete -c claude -s r -l resume -d "Resume a conversation"
complete -c claude -l fork-session -d "Create new session ID when resuming"
complete -c claude -l model -d "Model for current session"
complete -c claude -l fallback-model -d "Fallback model when default is overloaded"
complete -c claude -l settings -d "Path to settings JSON file or JSON string"
complete -c claude -l add-dir -d "Additional directories to allow tool access"
complete -c claude -l ide -d "Automatically connect to IDE on startup"
complete -c claude -l strict-mcp-config -d "Only use MCP servers from --mcp-config"
complete -c claude -l session-id -d "Use specific session ID (UUID)"
complete -c claude -l agents -d "JSON object defining custom agents"
complete -c claude -l setting-sources -d "Comma-separated list of setting sources"
complete -c claude -s v -l version -d "Output version number"
complete -c claude -s h -l help -d "Display help"
